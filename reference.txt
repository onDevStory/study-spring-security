# spring-security
  https://gs.saro.me/#!m=elec&jn=790
  https://gs.saro.me/#!m=elec&jn=791
  http://m.blog.naver.com/kimnx9006/220633299198

# AuthenticationEntryPoint
  미인증 상태에서 .anyRequest().authenticated() 에 해당하는 URL 호출 시,
  /login 화면으로 redirect 되던 것을 401 에러코드를 던지는 것으로 변경.
  
# User.java Entity
  private boolean verified; // primitive type 으로 할 경우, not null 이 자동으로 설정됨.
  
# http://ondevstory.tistory.com/201
  REST API 설계 시 가장 중요한 항목은 다음의 2가지로 요약할 수 있습니다.
  1st. URI는 정보의 자원을 표현해야 한다.
  2nd. 자원에 대한 행위는 HTTP Method(GET, POST, PUT, DELETE)로 표현한다.
  다른 것은 다 잊어도 위 내용은 꼭 기억하시길 바랍니다.

# http://bcho.tistory.com/914
  REST API 디자인 가이드 
 
# 비밀번호 암호화
  http://d2.naver.com/helloworld/318732
  https://slipp.net/questions/403
  
# User 조회
  단건도 List 로 반환. 조회결과가 없을 경우에는 emptyList 를 반환.
  
# enum value lookup 으로 검색
  http://bytefreaks.net/programming-2/java/java-create-a-lookup-table-for-an-enum
  
# MappedSuperclassTimestamp.java
  @NotNull 도 되지만, @Column(nullable = false) 로 통일.

# http://ondevstory.tistory.com/206
  HandlerInterceptor 적용
  
# http://ondevstory.tistory.com/207
  logging.level 수정
  
# profile
  http://ondevstory.tistory.com/208
  http://jsonobject.tistory.com/220 - Spring Boot 프로젝트에서 Profile 적용하기
  http://java.ihoney.pe.kr/397 - 스프링부트 로그파일 분리생성하기
  
# logback-local.xml 생성
  http://java.ihoney.pe.kr/397
  http://www.donnert.net/81
  SKB PROJECT
  
  D드라이브에 로그 폴더가 생성됨.
  
# AOP 적용
  https://blog.outsider.ne.kr/843
  https://github.com/jojoldu/blog-code/tree/master/aop
  https://www.mkyong.com/spring3/spring-aop-aspectj-annotation-example/
  https://www.egovframe.go.kr/wiki/doku.php?id=egovframework:rte:fdl:aop:aspectj
  http://jsonobject.tistory.com/247
  
# RestController 리턴 타입이 String 일 경우,
  StringHttpMessageConverter 가 변환을 담당.
  오류 발생 (ClassCastException : com.jhsung.common.ResponseFormat cannot be cast to java.lang.String)
  
  data 조회가 아닌 단순 저장, 수정, 삭제 처리는 리턴타입을 void 로 하자.
  프론트에서의 판단은 ResponseFormat success 값으로 하자.  
  
  
# security-jwt-1 
  https://auth0.com/blog/securing-spring-boot-with-jwts/
  
  